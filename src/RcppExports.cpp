// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// mmult1
NumericMatrix mmult1(NumericMatrix a, NumericMatrix b);
RcppExport SEXP _Taller1v2_mmult1(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(mmult1(a, b));
    return rcpp_result_gen;
END_RCPP
}
// mmult
NumericMatrix mmult(const NumericMatrix& m1, const NumericMatrix& m2);
RcppExport SEXP _Taller1v2_mmult(SEXP m1SEXP, SEXP m2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type m2(m2SEXP);
    rcpp_result_gen = Rcpp::wrap(mmult(m1, m2));
    return rcpp_result_gen;
END_RCPP
}
// mmult1
NumericMatrix mmult1(NumericMatrix a, NumericMatrix b);
RcppExport SEXP _Taller1v2_mmult1(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(mmult1(a, b));
    return rcpp_result_gen;
END_RCPP
}
// Wichmax_rcpp
DataFrame Wichmax_rcpp(NumericMatrix A);
RcppExport SEXP _Taller1v2_Wichmax_rcpp(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(Wichmax_rcpp(A));
    return rcpp_result_gen;
END_RCPP
}
// Wichmax_rcpp
DataFrame Wichmax_rcpp(NumericMatrix A);
RcppExport SEXP _Taller1v2_Wichmax_rcpp(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(Wichmax_rcpp(A));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Taller1v2_mmult1", (DL_FUNC) &_Taller1v2_mmult1, 2},
    {"_Taller1v2_mmult", (DL_FUNC) &_Taller1v2_mmult, 2},
    {"_Taller1v2_mmult1", (DL_FUNC) &_Taller1v2_mmult1, 2},
    {"_Taller1v2_Wichmax_rcpp", (DL_FUNC) &_Taller1v2_Wichmax_rcpp, 1},
    {"_Taller1v2_Wichmax_rcpp", (DL_FUNC) &_Taller1v2_Wichmax_rcpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_Taller1v2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
